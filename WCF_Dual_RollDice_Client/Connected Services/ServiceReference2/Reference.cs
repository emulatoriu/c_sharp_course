//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_Dual_RollDice_Client.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1", CallbackContract=typeof(WCF_Dual_RollDice_Client.ServiceReference2.IService1Callback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegUser", ReplyAction="http://tempuri.org/IService1/RegUserResponse")]
        bool RegUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegUser", ReplyAction="http://tempuri.org/IService1/RegUserResponse")]
        System.Threading.Tasks.Task<bool> RegUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Roll", ReplyAction="http://tempuri.org/IService1/RollResponse")]
        int Roll(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Roll", ReplyAction="http://tempuri.org/IService1/RollResponse")]
        System.Threading.Tasks.Task<int> RollAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/tellMeReply", ReplyAction="http://tempuri.org/IService1/tellMeReplyResponse")]
        void tellMeReply();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/tellMeReply", ReplyAction="http://tempuri.org/IService1/tellMeReplyResponse")]
        System.Threading.Tasks.Task tellMeReplyAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Callback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/GiveInfo")]
        void GiveInfo(string text);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/GameStarted")]
        void GameStarted();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCF_Dual_RollDice_Client.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.DuplexClientBase<WCF_Dual_RollDice_Client.ServiceReference2.IService1>, WCF_Dual_RollDice_Client.ServiceReference2.IService1 {
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }

        public Service1Client(object callbackInstance) : base(callbackInstance)
        {
        }

        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool RegUser(string name) {
            return base.Channel.RegUser(name);
        }
        
        public System.Threading.Tasks.Task<bool> RegUserAsync(string name) {
            return base.Channel.RegUserAsync(name);
        }
        
        public int Roll(string name) {
            return base.Channel.Roll(name);
        }
        
        public System.Threading.Tasks.Task<int> RollAsync(string name) {
            return base.Channel.RollAsync(name);
        }
        
        public void tellMeReply() {
            base.Channel.tellMeReply();
        }
        
        public System.Threading.Tasks.Task tellMeReplyAsync() {
            return base.Channel.tellMeReplyAsync();
        }
    }
}
