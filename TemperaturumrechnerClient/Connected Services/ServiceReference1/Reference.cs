//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TemperaturumrechnerClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationToken", Namespace="http://schemas.datacontract.org/2004/07/TemperaturUmrechnerService")]
    [System.SerializableAttribute()]
    public partial struct AuthenticationToken : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime authTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cmpHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime authTimeStamp {
            get {
                return this.authTimeStampField;
            }
            set {
                if ((this.authTimeStampField.Equals(value) != true)) {
                    this.authTimeStampField = value;
                    this.RaisePropertyChanged("authTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cmpHash {
            get {
                return this.cmpHashField;
            }
            set {
                if ((object.ReferenceEquals(this.cmpHashField, value) != true)) {
                    this.cmpHashField = value;
                    this.RaisePropertyChanged("cmpHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/TemperaturUmrechnerService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Kunden", Namespace="http://schemas.datacontract.org/2004/07/TemperaturUmrechnerService")]
    [System.SerializableAttribute()]
    public partial class Kunden : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long KundenIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NachnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VornameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long KundenID {
            get {
                return this.KundenIDField;
            }
            set {
                if ((this.KundenIDField.Equals(value) != true)) {
                    this.KundenIDField = value;
                    this.RaisePropertyChanged("KundenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nachname {
            get {
                return this.NachnameField;
            }
            set {
                if ((object.ReferenceEquals(this.NachnameField, value) != true)) {
                    this.NachnameField = value;
                    this.RaisePropertyChanged("Nachname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vorname {
            get {
                return this.VornameField;
            }
            set {
                if ((object.ReferenceEquals(this.VornameField, value) != true)) {
                    this.VornameField = value;
                    this.RaisePropertyChanged("Vorname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiusToKelvin", ReplyAction="http://tempuri.org/IService1/CelsiusToKelvinResponse")]
        TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinResponse CelsiusToKelvin(TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiusToKelvin", ReplyAction="http://tempuri.org/IService1/CelsiusToKelvinResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinResponse> CelsiusToKelvinAsync(TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiusToFahrenheit", ReplyAction="http://tempuri.org/IService1/CelsiusToFahrenheitResponse")]
        TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitResponse CelsiusToFahrenheit(TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CelsiusToFahrenheit", ReplyAction="http://tempuri.org/IService1/CelsiusToFahrenheitResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitResponse> CelsiusToFahrenheitAsync(TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvinNachCelsius", ReplyAction="http://tempuri.org/IService1/KelvinNachCelsiusResponse")]
        TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusResponse KelvinNachCelsius(TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvinNachCelsius", ReplyAction="http://tempuri.org/IService1/KelvinNachCelsiusResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusResponse> KelvinNachCelsiusAsync(TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvinNachFahreheit", ReplyAction="http://tempuri.org/IService1/KelvinNachFahreheitResponse")]
        TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitResponse KelvinNachFahreheit(TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KelvinNachFahreheit", ReplyAction="http://tempuri.org/IService1/KelvinNachFahreheitResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitResponse> KelvinNachFahreheitAsync(TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheitNachCelsius", ReplyAction="http://tempuri.org/IService1/FahrenheitNachCelsiusResponse")]
        TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusResponse FahrenheitNachCelsius(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheitNachCelsius", ReplyAction="http://tempuri.org/IService1/FahrenheitNachCelsiusResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusResponse> FahrenheitNachCelsiusAsync(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheitNachKelvin", ReplyAction="http://tempuri.org/IService1/FahrenheitNachKelvinResponse")]
        TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinResponse FahrenheitNachKelvin(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FahrenheitNachKelvin", ReplyAction="http://tempuri.org/IService1/FahrenheitNachKelvinResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinResponse> FahrenheitNachKelvinAsync(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        TemperaturumrechnerClient.ServiceReference1.CompositeType GetDataUsingDataContract(TemperaturumrechnerClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(TemperaturumrechnerClient.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertKunde", ReplyAction="http://tempuri.org/IService1/insertKundeResponse")]
        bool insertKunde(TemperaturumrechnerClient.ServiceReference1.Kunden k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertKunde", ReplyAction="http://tempuri.org/IService1/insertKundeResponse")]
        System.Threading.Tasks.Task<bool> insertKundeAsync(TemperaturumrechnerClient.ServiceReference1.Kunden k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        TemperaturumrechnerClient.ServiceReference1.loginResponse login(TemperaturumrechnerClient.ServiceReference1.loginRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.loginResponse> loginAsync(TemperaturumrechnerClient.ServiceReference1.loginRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CelsiusToKelvin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CelsiusToKelvinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double wert;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public CelsiusToKelvinRequest() {
        }
        
        public CelsiusToKelvinRequest(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.wert = wert;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CelsiusToKelvinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CelsiusToKelvinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CelsiusToKelvinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double calcResult;
        
        public CelsiusToKelvinResponse() {
        }
        
        public CelsiusToKelvinResponse(bool CelsiusToKelvinResult, double calcResult) {
            this.CelsiusToKelvinResult = CelsiusToKelvinResult;
            this.calcResult = calcResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CelsiusToFahrenheit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CelsiusToFahrenheitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double wert;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public CelsiusToFahrenheitRequest() {
        }
        
        public CelsiusToFahrenheitRequest(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.wert = wert;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CelsiusToFahrenheitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CelsiusToFahrenheitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CelsiusToFahrenheitResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double calcResult;
        
        public CelsiusToFahrenheitResponse() {
        }
        
        public CelsiusToFahrenheitResponse(bool CelsiusToFahrenheitResult, double calcResult) {
            this.CelsiusToFahrenheitResult = CelsiusToFahrenheitResult;
            this.calcResult = calcResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KelvinNachCelsius", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KelvinNachCelsiusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double wert;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public KelvinNachCelsiusRequest() {
        }
        
        public KelvinNachCelsiusRequest(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.wert = wert;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KelvinNachCelsiusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KelvinNachCelsiusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool KelvinNachCelsiusResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double calcResult;
        
        public KelvinNachCelsiusResponse() {
        }
        
        public KelvinNachCelsiusResponse(bool KelvinNachCelsiusResult, double calcResult) {
            this.KelvinNachCelsiusResult = KelvinNachCelsiusResult;
            this.calcResult = calcResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KelvinNachFahreheit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KelvinNachFahreheitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double wert;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public KelvinNachFahreheitRequest() {
        }
        
        public KelvinNachFahreheitRequest(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.wert = wert;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KelvinNachFahreheitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KelvinNachFahreheitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool KelvinNachFahreheitResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double calcResult;
        
        public KelvinNachFahreheitResponse() {
        }
        
        public KelvinNachFahreheitResponse(bool KelvinNachFahreheitResult, double calcResult) {
            this.KelvinNachFahreheitResult = KelvinNachFahreheitResult;
            this.calcResult = calcResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FahrenheitNachCelsius", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FahrenheitNachCelsiusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double wert;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public FahrenheitNachCelsiusRequest() {
        }
        
        public FahrenheitNachCelsiusRequest(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.wert = wert;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FahrenheitNachCelsiusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FahrenheitNachCelsiusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool FahrenheitNachCelsiusResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double calcResult;
        
        public FahrenheitNachCelsiusResponse() {
        }
        
        public FahrenheitNachCelsiusResponse(bool FahrenheitNachCelsiusResult, double calcResult) {
            this.FahrenheitNachCelsiusResult = FahrenheitNachCelsiusResult;
            this.calcResult = calcResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FahrenheitNachKelvin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FahrenheitNachKelvinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double wert;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public FahrenheitNachKelvinRequest() {
        }
        
        public FahrenheitNachKelvinRequest(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.wert = wert;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FahrenheitNachKelvinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FahrenheitNachKelvinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool FahrenheitNachKelvinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double calcResult;
        
        public FahrenheitNachKelvinResponse() {
        }
        
        public FahrenheitNachKelvinResponse(bool FahrenheitNachKelvinResult, double calcResult) {
            this.FahrenheitNachKelvinResult = FahrenheitNachKelvinResult;
            this.calcResult = calcResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="login", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class loginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public loginRequest() {
        }
        
        public loginRequest(string email, string pwd, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.email = email;
            this.pwd = pwd;
            this.auth = auth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="loginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class loginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool loginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth;
        
        public loginResponse() {
        }
        
        public loginResponse(bool loginResult, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            this.loginResult = loginResult;
            this.auth = auth;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TemperaturumrechnerClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TemperaturumrechnerClient.ServiceReference1.IService1>, TemperaturumrechnerClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinResponse TemperaturumrechnerClient.ServiceReference1.IService1.CelsiusToKelvin(TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinRequest request) {
            return base.Channel.CelsiusToKelvin(request);
        }
        
        public bool CelsiusToKelvin(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth, out double calcResult) {
            TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinRequest inValue = new TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinRequest();
            inValue.wert = wert;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).CelsiusToKelvin(inValue);
            calcResult = retVal.calcResult;
            return retVal.CelsiusToKelvinResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinResponse> CelsiusToKelvinAsync(TemperaturumrechnerClient.ServiceReference1.CelsiusToKelvinRequest request) {
            return base.Channel.CelsiusToKelvinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitResponse TemperaturumrechnerClient.ServiceReference1.IService1.CelsiusToFahrenheit(TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitRequest request) {
            return base.Channel.CelsiusToFahrenheit(request);
        }
        
        public bool CelsiusToFahrenheit(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth, out double calcResult) {
            TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitRequest inValue = new TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitRequest();
            inValue.wert = wert;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).CelsiusToFahrenheit(inValue);
            calcResult = retVal.calcResult;
            return retVal.CelsiusToFahrenheitResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitResponse> CelsiusToFahrenheitAsync(TemperaturumrechnerClient.ServiceReference1.CelsiusToFahrenheitRequest request) {
            return base.Channel.CelsiusToFahrenheitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusResponse TemperaturumrechnerClient.ServiceReference1.IService1.KelvinNachCelsius(TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusRequest request) {
            return base.Channel.KelvinNachCelsius(request);
        }
        
        public bool KelvinNachCelsius(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth, out double calcResult) {
            TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusRequest inValue = new TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusRequest();
            inValue.wert = wert;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).KelvinNachCelsius(inValue);
            calcResult = retVal.calcResult;
            return retVal.KelvinNachCelsiusResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusResponse> KelvinNachCelsiusAsync(TemperaturumrechnerClient.ServiceReference1.KelvinNachCelsiusRequest request) {
            return base.Channel.KelvinNachCelsiusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitResponse TemperaturumrechnerClient.ServiceReference1.IService1.KelvinNachFahreheit(TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitRequest request) {
            return base.Channel.KelvinNachFahreheit(request);
        }
        
        public bool KelvinNachFahreheit(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth, out double calcResult) {
            TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitRequest inValue = new TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitRequest();
            inValue.wert = wert;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).KelvinNachFahreheit(inValue);
            calcResult = retVal.calcResult;
            return retVal.KelvinNachFahreheitResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitResponse> KelvinNachFahreheitAsync(TemperaturumrechnerClient.ServiceReference1.KelvinNachFahreheitRequest request) {
            return base.Channel.KelvinNachFahreheitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusResponse TemperaturumrechnerClient.ServiceReference1.IService1.FahrenheitNachCelsius(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusRequest request) {
            return base.Channel.FahrenheitNachCelsius(request);
        }
        
        public bool FahrenheitNachCelsius(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth, out double calcResult) {
            TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusRequest inValue = new TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusRequest();
            inValue.wert = wert;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).FahrenheitNachCelsius(inValue);
            calcResult = retVal.calcResult;
            return retVal.FahrenheitNachCelsiusResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusResponse> FahrenheitNachCelsiusAsync(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachCelsiusRequest request) {
            return base.Channel.FahrenheitNachCelsiusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinResponse TemperaturumrechnerClient.ServiceReference1.IService1.FahrenheitNachKelvin(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinRequest request) {
            return base.Channel.FahrenheitNachKelvin(request);
        }
        
        public bool FahrenheitNachKelvin(double wert, TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth, out double calcResult) {
            TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinRequest inValue = new TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinRequest();
            inValue.wert = wert;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).FahrenheitNachKelvin(inValue);
            calcResult = retVal.calcResult;
            return retVal.FahrenheitNachKelvinResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinResponse> FahrenheitNachKelvinAsync(TemperaturumrechnerClient.ServiceReference1.FahrenheitNachKelvinRequest request) {
            return base.Channel.FahrenheitNachKelvinAsync(request);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public TemperaturumrechnerClient.ServiceReference1.CompositeType GetDataUsingDataContract(TemperaturumrechnerClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(TemperaturumrechnerClient.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool insertKunde(TemperaturumrechnerClient.ServiceReference1.Kunden k) {
            return base.Channel.insertKunde(k);
        }
        
        public System.Threading.Tasks.Task<bool> insertKundeAsync(TemperaturumrechnerClient.ServiceReference1.Kunden k) {
            return base.Channel.insertKundeAsync(k);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemperaturumrechnerClient.ServiceReference1.loginResponse TemperaturumrechnerClient.ServiceReference1.IService1.login(TemperaturumrechnerClient.ServiceReference1.loginRequest request) {
            return base.Channel.login(request);
        }
        
        public bool login(string email, string pwd, ref TemperaturumrechnerClient.ServiceReference1.AuthenticationToken auth) {
            TemperaturumrechnerClient.ServiceReference1.loginRequest inValue = new TemperaturumrechnerClient.ServiceReference1.loginRequest();
            inValue.email = email;
            inValue.pwd = pwd;
            inValue.auth = auth;
            TemperaturumrechnerClient.ServiceReference1.loginResponse retVal = ((TemperaturumrechnerClient.ServiceReference1.IService1)(this)).login(inValue);
            auth = retVal.auth;
            return retVal.loginResult;
        }
        
        public System.Threading.Tasks.Task<TemperaturumrechnerClient.ServiceReference1.loginResponse> loginAsync(TemperaturumrechnerClient.ServiceReference1.loginRequest request) {
            return base.Channel.loginAsync(request);
        }
    }
}
